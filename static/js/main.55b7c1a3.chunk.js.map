{"version":3,"sources":["components/Input.js","App.js","reportWebVitals.js","index.js"],"names":["Input","useState","userCurrency","setUserCurrency","units","setUnits","solarData","setSolarData","userPosition","setUserPosition","console","log","draggable","setDraggable","markerRef","useRef","eventHandlers","useMemo","dragend","marker","current","getLatLng","toggleDraggable","useCallback","d","useEffect","getData","a","fetch","lat","lng","json","parsedSolarData","navigator","geolocation","getCurrentPosition","position","posi","coords","latitude","longitude","error","className","id","type","min","max","step","maxLength","size","onChange","e","target","value","defaultValue","class","MapContainer","center","zoom","style","width","height","scrollWheelZoom","TileLayer","attribution","url","Marker","ref","Popup","minWidth","onClick","role","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55b7c1a3.chunk.js","sourcesContent":["import React, { useState, useEffect, useMemo, useRef, useCallback } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport './Input.css';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n\r\nfunction Input() {\r\n    const [userCurrency, setUserCurrency] = useState('INR');\r\n    const [units, setUnits] = useState('sqm');\r\n    const [solarData, setSolarData] = useState();\r\n    const [userPosition, setUserPosition] = useState();\r\n\r\n    console.log(userPosition)\r\n    console.log(solarData)\r\n\r\n    const [draggable, setDraggable] = useState(false);\r\n    const markerRef = useRef(null);\r\n    const eventHandlers = useMemo(\r\n        () => ({\r\n            dragend() {\r\n                const marker = markerRef.current\r\n                if (marker != null) {\r\n                    setUserPosition(marker.getLatLng())\r\n                }\r\n            },\r\n        }),\r\n        [],\r\n    )\r\n    const toggleDraggable = useCallback(() => {\r\n        setDraggable((d) => !d)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!userPosition) {\r\n            navigator.geolocation.getCurrentPosition((position) => {\r\n                const posi = {\r\n                    lat: position.coords.latitude,\r\n                    lng: position.coords.longitude,\r\n                }\r\n                setUserPosition(posi)\r\n                const getData = async () => {\r\n                    const solarData = await fetch(`https://developer.nrel.gov/api/solar/solar_resource/v1.json?api_key=EcHIlOB7hmPSAsR0kKtIimdO69cGeBxzAdXRtuTl&lat=${userPosition ? userPosition.lat : position.coords.latitude}&lon=${userPosition ? userPosition.lng : position.coords.longitude}`)\r\n                    const parsedSolarData = await solarData.json()\r\n                    setSolarData(parsedSolarData)\r\n                }\r\n                getData();\r\n            }, (error) => {\r\n                console.log(error)\r\n            });\r\n        } else {\r\n            const getData = async () => {\r\n                const solarData = await fetch(`https://developer.nrel.gov/api/solar/solar_resource/v1.json?api_key=EcHIlOB7hmPSAsR0kKtIimdO69cGeBxzAdXRtuTl&lat=${userPosition.lat}&lon=${userPosition.lng}`)\r\n                const parsedSolarData = await solarData.json()\r\n                console.log(parsedSolarData)\r\n                setSolarData(parsedSolarData)\r\n            }\r\n            getData();\r\n        }\r\n\r\n    }, [userPosition])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"input-group mb-3\" id=\"cost\">\r\n                <span className=\"input-group-text\">\r\n                    <b>Electricty Cost:</b>\r\n                </span>\r\n                {/* <!-- <span className=\"input-group-text\">$</span> --> */}\r\n                <input type=\"text\" min=\"0\" max=\"100\" step=\"any\" className=\"form-control\" maxLength=\"3\" size=\"4\" />\r\n                <span className=\"input-group-text\">.00</span>\r\n                <select className=\"form-select\" aria-label=\"Default select example\" id=\"currency\" onChange={(e) => { setUserCurrency(e.target.value) }} defaultValue={userCurrency}>\r\n                    <option value=\"USD\">United States Dollars</option>\r\n                    <option value=\"EUR\">Euro</option>\r\n                    <option value=\"GBP\">United Kingdom Pounds</option>\r\n                    <option value=\"DZD\">Algeria Dinars</option>\r\n                    <option value=\"ARP\">Argentina Pesos</option>\r\n                    <option value=\"AUD\">Australia Dollars</option>\r\n                    <option value=\"ATS\">Austria Schillings</option>\r\n                    <option value=\"BSD\">Bahamas Dollars</option>\r\n                    <option value=\"BBD\">Barbados Dollars</option>\r\n                    <option value=\"BEF\">Belgium Francs</option>\r\n                    <option value=\"BMD\">Bermuda Dollars</option>\r\n                    <option value=\"BRR\">Brazil Real</option>\r\n                    <option value=\"BGL\">Bulgaria Lev</option>\r\n                    <option value=\"CAD\">Canada Dollars</option>\r\n                    <option value=\"CLP\">Chile Pesos</option>\r\n                    <option value=\"CNY\">China Yuan Renmimbi</option>\r\n                    <option value=\"CYP\">Cyprus Pounds</option>\r\n                    <option value=\"CSK\">Czech Republic Koruna</option>\r\n                    <option value=\"DKK\">Denmark Kroner</option>\r\n                    <option value=\"NLG\">Dutch Guilders</option>\r\n                    <option value=\"EGP\">Egypt Pounds</option>\r\n                    <option value=\"FJD\">Fiji Dollars</option>\r\n                    <option value=\"FIM\">Finland Markka</option>\r\n                    <option value=\"FRF\">France Francs</option>\r\n                    <option value=\"DEM\">Germany Deutsche Marks</option>\r\n                    <option value=\"XAU\">Gold Ounces</option>\r\n                    <option value=\"GRD\">Greece Drachmas</option>\r\n                    <option value=\"HKD\">Hong Kong Dollars</option>\r\n                    <option value=\"HUF\">Hungary Forint</option>\r\n                    <option value=\"ISK\">Iceland Krona</option>\r\n                    <option value=\"INR\">Indian Rupee</option>\r\n                    <option value=\"IDR\">Indonesia Rupiah</option>\r\n                    <option value=\"IEP\">Ireland Punt</option>\r\n                    <option value=\"ILS\">Israel New Shekels</option>\r\n                    <option value=\"ITL\">Italy Lira</option>\r\n                    <option value=\"JMD\">Jamaica Dollars</option>\r\n                    <option value=\"JPY\">Japan Yen</option>\r\n                    <option value=\"JOD\">Jordan Dinar</option>\r\n                    <option value=\"KRW\">Korea (South) Won</option>\r\n                    <option value=\"LBP\">Lebanon Pounds</option>\r\n                    <option value=\"LUF\">Luxembourg Francs</option>\r\n                    <option value=\"MYR\">Malaysia Ringgit</option>\r\n                    <option value=\"MXP\">Mexico Pesos</option>\r\n                    <option value=\"NLG\">Netherlands Guilders</option>\r\n                    <option value=\"NZD\">New Zealand Dollars</option>\r\n                    <option value=\"NOK\">Norway Kroner</option>\r\n                    <option value=\"PKR\">Pakistan Rupees</option>\r\n                    <option value=\"XPD\">Palladium Ounces</option>\r\n                    <option value=\"PHP\">Philippines Pesos</option>\r\n                    <option value=\"XPT\">Platinum Ounces</option>\r\n                    <option value=\"PLZ\">Poland Zloty</option>\r\n                    <option value=\"PTE\">Portugal Escudo</option>\r\n                    <option value=\"ROL\">Romania Leu</option>\r\n                    <option value=\"RUR\">Russia Rubles</option>\r\n                    <option value=\"SAR\">Saudi Arabia Riyal</option>\r\n                    <option value=\"XAG\">Silver Ounces</option>\r\n                    <option value=\"SGD\">Singapore Dollars</option>\r\n                    <option value=\"SKK\">Slovakia Koruna</option>\r\n                    <option value=\"ZAR\">South Africa Rand</option>\r\n                    <option value=\"KRW\">South Korea Won</option>\r\n                    <option value=\"ESP\">Spain Pesetas</option>\r\n                    <option value=\"SDD\">Sudan Dinar</option>\r\n                    <option value=\"SEK\">Sweden Krona</option>\r\n                    <option value=\"CHF\">Switzerland Francs</option>\r\n                    <option value=\"TWD\">Taiwan Dollars</option>\r\n                    <option value=\"THB\">Thailand Baht</option>\r\n                    <option value=\"TTD\">Trinidad and Tobago Dollars</option>\r\n                    <option value=\"TRL\">Turkey Lira</option>\r\n                    <option value=\"VEB\">Venezuela Bolivar</option>\r\n                    <option value=\"ZMK\">Zambia Kwacha</option>\r\n                </select>\r\n                <span className=\"input-group-text\">per KWh</span>\r\n                <div>\r\n                </div>\r\n            </div>\r\n            <div className=\"input-group mb-3\">\r\n                <span className=\"input-group-text\">\r\n                    <b>Area covered by solar panels:</b>\r\n                </span>\r\n                {/* <span className=\"input-group-text\">$</span> */}\r\n                <input type=\"text\" min=\"0\" max=\"100\" step=\"any\" className=\"form-control\" maxLength=\"19\" />\r\n                <select className=\"form-select\" aria-label=\"Default select example\" id=\"units\" onChange={(e) => { setUnits(e.target.value) }} defaultValue={units}>\r\n                    <option value=\"sqm\">Square meter</option>\r\n                    <option value=\"sqk\">Square kilometer</option>\r\n                    <option value=\"sqm\">Square mile</option>\r\n                    <option value=\"sqf\">Square foot</option>\r\n                    <option value=\"sqi\">Square inch</option>\r\n                    <option value=\"sqh\">Hecatre</option>\r\n                    <option value=\"sqa\">Acre</option>\r\n                </select>\r\n                <div>\r\n                </div>\r\n            </div>\r\n            <div className=\"input-group mb-3\">\r\n                <span className=\"input-group-text\">\r\n                    <b>Cost of one solar panel:</b>\r\n                </span>\r\n                {/* <span className=\"input-group-text\">$</span> */}\r\n                <input type=\"text\" min=\"0\" max=\"100\" step=\"any\" className=\"form-control\" maxLength=\"3\" size=\"4\" />\r\n                <span class=\"input-group-text\">.00</span>\r\n            </div>\r\n            <span className=\"input-group-text\" id=\"range\"><b>Time: 1 Year</b>\r\n                <input type=\"range\" className=\"form-range\" id=\"customRange1\" />\r\n            </span>\r\n            <div id=\"map\">\r\n                {userPosition ?\r\n                    <MapContainer\r\n                        center={userPosition ? [userPosition.lat, userPosition.lng] : [51.505, -0.09]}\r\n                        zoom={10}\r\n                        style={{ width: '50rem', height: '30rem' }}\r\n                        scrollWheelZoom={true}\r\n                    >\r\n                        <TileLayer\r\n                            attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                        />\r\n                        <Marker\r\n                            draggable={draggable}\r\n                            eventHandlers={eventHandlers}\r\n                            position={userPosition ? [userPosition.lat, userPosition.lng] : [51.505, -0.09]}\r\n                            ref={markerRef}\r\n                        >\r\n                            <Popup minWidth={90}>\r\n                                <span\r\n                                    onClick={toggleDraggable}\r\n                                >\r\n                                    {draggable\r\n                                        ? 'Marker is draggable'\r\n                                        : 'Click here to make marker draggable'}\r\n                                </span>\r\n                            </Popup>\r\n                        </Marker>\r\n                    </MapContainer>\r\n                    : <div class=\"d-flex justify-content-center my-5 py-5\">\r\n                        <div class=\"spinner-border text-light\" role=\"status\">\r\n                            <span class=\"visually-hidden\">Loading...</span>\r\n                        </div>\r\n                    </div>}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Input;","import React from 'react';\nimport 'leaflet/dist/leaflet.css'\nimport './App.css';\n\nimport Input from './components/Input'\n\nfunction App() {\n  return (\n    <>\n    <Input />\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}